import telebot
import requests
from bs4 import BeautifulSoup


from database import database


#–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
token = ''
bot = telebot.TeleBot(token)


#–∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start','help'])  
def start_command(message):  

    text_hi = '–ü—Ä–∏–≤–µ—Çüòä\n'
    text_hi += '–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ.\n'
    

    bot.send_message(message.chat.id, text_hi)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
@bot.message_handler(content_types=['photo'])
def handle(message):
  #–≤—ã–∑–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  us_id = message.from_user.id
  us_name = message.from_user.first_name
  us_sname = message.from_user.last_name
  username = message.from_user.username
  us_chat_id = message.chat.id


  db = database()
  check = 0
  #–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞  –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  check = db.check_connection(check)

  if check:
    print('–°–û–ï–î–ò–ù–ï–ù–ò–ï –° –ë–ê–ó–û–ô –î–ê–ù–ù–û–ô –£–°–¢–ê–ù–û–í–õ–ï–ù–û')
    #–æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    check_user = db.user_identity(us_id, us_chat_id, us_name, us_sname, username)
    #db.user_identity(us_id)

    #–∑–∞–ø—Ä–æ—Å –ª–æ–≥–∞
    #log_request(message)

    #–ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image_name = save_image_from_message(message)


    #–æ—Ç–ø—Ä–∞–≤–∫–∞ cc—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç

    result = parser(image_name)
    

    #–≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

    # send classification results
    output = '–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏:\n'
    output += '\n'

    for data in result:
      output += data.text
      output += '\n'

    
    bot.reply_to(message, output)



  else:
    output = '–û—à–∏–±–∫–∞ –±–æ—Ç–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'
    bot.reply_to(message, output)
  
     



# ----------- –§—É–Ω–∫—Ü–∏–∏ ---------------


#def log_request(message):
#  file = open('.data/logs.txt', 'a') #append to file 
#  file.write("{0} - {1} {2} [{3}]\n".format(datetime.datetime.now(), message.from_user.first_name, message.from_user.last_name, message.from_user.id)) 
 # print("{0} - {1} {2} [{3}]".format(datetime.datetime.now(), message.from_user.first_name, message.from_user.last_name, message.from_user.id))
 # file.close() 
# ----------- #

def get_image_id_from_message(message):
  # there are multiple array of images, check the biggest
  return message.photo[len(message.photo)-1].file_id
# ----------- #

def save_image_from_message(message):
    cid = message.chat.id

    image_id = get_image_id_from_message(message)

    bot.send_message(cid, 'üî• –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø–æ–¥–æ–∂–¥–∏—Ç–µ —á—É—Ç—å-—Ç—É—Ç—å ! üî•')

    # prepare image for downlading
    file_path = bot.get_file(image_id).file_path

    # generate image download url
    image_url = "https://api.telegram.org/file/bot{0}/{1}".format(token, file_path)
    print(image_url)
  
  
    return image_url


def parser(image_ulr):

    prepared_url = r'https://yandex.ru/images/search?source=collections&rpt=imageview&url='
    url = prepared_url + image_ulr
    
    print(url)

    page = requests.get(url)
    soup = BeautifulSoup(page.text, 'html.parser')
    soup.prettify()
    print(page.status_code)

    similar = soup.find('section', class_='CbirItem CbirTags').find_all('span')

    for item in similar:
      print(item.text)

    return similar

bot.polling(none_stop=True, interval=0)
